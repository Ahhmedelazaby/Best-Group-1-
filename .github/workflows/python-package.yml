import pygame
import random
import sys
from pygame import mixer

# Initialize pygame
pygame.init()

#window
screen_width = 400
screen_height = 600
screen = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption("Car Racing Game")

#the bg audio

mixer.music.load('project/UA7PCjGMC5Fb.128.mp3')
mixer.music.play(-1)

#colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
GRAY = (169, 169, 169)

#enemy car
car_width = 50
car_height = 90
player_car_x = screen_width // 2 - car_width // 2
player_car_y = screen_height - car_height - 20
player_car_speed = 5

enemy_car_width = 50
enemy_car_height = 90
enemy_car_speed = 5
enemy_car_frequency = 88  # respawn

#score
score = 0
font = pygame.font.SysFont('Arial', 30)

#images
player_car_image = pygame.image.load('project/ahmedwalidplayer_car.png.jpg')  
player_car_image = pygame.transform.scale(player_car_image, (car_width, car_height))

enemy_car_image = pygame.image.load('project/enemy_page-0001.jpg')  
enemy_car_image = pygame.transform.scale(enemy_car_image, (enemy_car_width, enemy_car_height))

background_image = pygame.image.load('project/OIP.jpg')  
background_image = pygame.transform.scale(background_image, (screen_width, screen_height))

#creating our player's car object
player_car = pygame.Rect(player_car_x, player_car_y, car_width, car_height)


enemy_cars = []

#enemy car 
class EnemyCar:
    def __init__(self):
        self.x = random.randint(0, screen_width - enemy_car_width)
        self.y = -enemy_car_height  # Start above the screen
        self.speed = random.randint(3, 7)
        self.rect = pygame.Rect(self.x, self.y, enemy_car_width, enemy_car_height)

    def move(self):
        self.rect.y += self.speed

#game over screen
def game_over():
    font = pygame.font.SysFont("arial", 25)
    text = font.render("GAME OVER", True, RED)
    text_rect = text.get_rect(center=(screen_width // 2, screen_height // 3))
    
    restart_text = font.render("Press R to Restart or Q to Quit", True, WHITE)
    restart_text_rect = restart_text.get_rect(center=(screen_width // 2, screen_height // 2))

    screen.fill(BLACK)
    screen.blit(text, text_rect)
    screen.blit(restart_text, restart_text_rect)

    pygame.display.flip()

# Main game loop
running = True 
clock = pygame.time.Clock()

bg_y = 0
bg_scroll_speed = 5
restart = False

# Game over function
def game_over():
    game_over_text = font.render("LOSER! press R to restart or Q to quit", True, RED)
    screen.blit(game_over_text, (screen_width // 11, screen_height // 2))

while running:
    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Fill the screen with black during the game over screen
    if restart:
        screen.fill(BLACK)
        game_over()
        
        # Wait for player to choose restart or quit
        keys = pygame.key.get_pressed()
        if keys[pygame.K_r]:
            # Reset game state
            my_car.x = screen_width // 2 - my_car_width // 2
            enemy_cars.clear()
            score = 0
            restart = False
        elif keys[pygame.K_q]:
            running = False
    else:
        # Player car movement
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and my_car.x > 0:
            my_car.x -= player_car_speed
        if keys[pygame.K_RIGHT] and my_car.x < screen_width - my_car_width:
            my_car.x += player_car_speed

            
        #random enemy cars 
        if random.randint(1, enemy_car_frequency) == 1:
            enemy_cars.append(EnemyCar())

        
        for enemy in enemy_cars:
            enemy.move()


            #enemy cars that go off-screen
        if enemy.rect.y > screen_height:
                enemy_cars.remove(enemy)
                score += 1

        #scrolling the bg
        
        bg_y += bg_scroll_speed
        if bg_y >= screen_height:
            bg_y = 0
            
        #drawing the bg
        screen.blit(background_image, (0, bg_y))  # Draw background image
        if bg_y < screen_height:
            screen.blit(background_image, (0, bg_y - screen_height))  # Draw second part for smooth scrolling

        #player car
        screen.blit(player_car_image, player_car)

        #enemy cars
        for enemy in enemy_cars:
            screen.blit(enemy_car_image, enemy.rect)

        #score
        score_text = font.render(f"Score: {score}", True, BLACK)
        screen.blit(score_text, (10, 10))

    #this line is for updating our screen
    pygame.display.flip()

    # setting the fps
    clock.tick(60)


pygame.quit()
sys.exit()

    
